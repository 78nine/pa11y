#!/usr/bin/env node
'use strict';

var pkg = require('../package.json');
var program = require('commander');
var pa11y = require('../lib/pa11y');

configureProgram(program);
runProgram(program);

function configureProgram (program) {
	program.version(pkg.version)
		.usage('[options] <url>')
		.option('-p, --port <port>', 'the port to run PhantomJS on')
		.option('-r, --reporter <reporter>', 'the reporter to use: cli, csv, json', 'cli')
		.option('-d, --debug', 'Output debug messages')
		.parse(process.argv);
	program.url = program.args[0];
}

function runProgram (program) {
	if (!program.url || program.args[1]) {
		program.help();
	}
	var reporter = loadReporter(program.reporter);
	if (!program.debug) {
		reporter.debug = function () {};
	}
	var options = {
		log: reporter,
		phantom: {
			port: program.port
		}
	};
	reporter.begin();
	pa11y(options, function (error, test, exit) {
		if (error) {
			reporter.error(error.stack);
			process.exit(1);
		}
		test(program.url, function (error, results) {
			if (error) {
				reporter.error(error.stack);
				process.exit(1);
			}
			reporter.results(results);
			exit();
		});
	});
}

function loadReporter (name) {
	var reporter;
	try {
		reporter = require('../reporter/' + name);
	} catch (error) {
		try {
			reporter = require('pa11y-reporter-' + name);
		} catch (error) {
			reporter = pa11y.defaults.log;
		}
	}
	return reporter;
}
